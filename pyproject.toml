[tool.poetry]
name = "papita-save-me-money"
version = "v0.0.1"
description = "Papita Public projects: save-me-money"
readme = "README.md"
package-mode = false
authors = ["Elmorralito <drestrepohinc@gmail.com>"]
include = [
    "README.md"
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
papita-transactions-tracker = {path = "papita-transactions-tracker"}

[tool.poetry.group.pre-commit.dependencies]
black = "^24.4.2"
mypy = "^1.14.1"
pre-commit = "^3.7.1"
pylint = "^3.2.6"
flake8 = "^7.1.0"
isort = "^5.13.2"
pytest = "^8.3.1"
pytest-cov = "^5.0.0"
boto3-stubs = "^1.34.147"
build = "^1.2.2.post1"
types-pyyaml = "^6.0.12.20241230"
ipykernel = "^6.29.5"
types-python-dateutil = "^2.9.0.20250516"
sqlfluff = "^3.4.0"
tabulate = "^0.9.0"
types-tabulate = "^0.9.0.20241207"
types-toml = "^0.10.8.20240310"

[tool.poetry.group.development.dependencies]
pandas = ">=2.3.1,<2.4.0"
openpyxl = ">=3.1.2,<3.2.0"
pydantic = ">=2.3.0,<2.4.0"
alembic = {version = "^1.16.4", extras = ['tz']}
psycopg2-binary = "^2.9.10"
duckdb-engine = "^0.13.6"
sqlalchemy = { extras = ["duckdb-engine"], version = "^2.0.43" }
sqlmodel = "^0.0.24"
dotenv = "^0.9.9"
poetry = "^2.1.4"


[tool.poetry.group.dev.dependencies]
toml = "^0.10.2"

[build-system]
requires = ["poetry>=1.1.13"]
build-backend = "poetry.masonry.api"

[tool.pytest.ini_options]
addopts = "--import-mode=importlib -raqvs --cov=papita-transactions-model/tests --cov=papita-transactions-tracker/tests --cov-report xml:docs"
testpaths = ["papita-transactions-model/tests", "papita-transactions-tracker/tests"]

[tool.pylint]
init-hook = 'import sys; sys.path.extend(["papita-transactions-model/src", "papita-transactions-tracker/src"])'
ignored-modules = ["psycopg2.errors"]
max-args = 8

[tool.pylint.MASTER]
ignore-paths = [
    "^.*/tests/.*$",
]

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "broad-except",
    "redefined-outer-name",
    "import-outside-toplevel",
    "too-few-public-methods",
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    "wildcard-import",
    "unused-wildcard-import",
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "duplicate-code",
    "unused-argument",
    "attribute-defined-outside-init",
    "use-a-generator",
    "unnecessary-comprehension",
    "consider-using-dict-comprehension",
    "E1101"
]

[tool.pylint.'FORMAT']
max-line-length = 120
max-module-lines = 1000

[tool.black]
line-length = 120
target-version = ["py312"]
include = "\\.pyi?$"

[tool.mypy]
mypy_path = ["*"]
exclude = ["tests/*"]
python_version = "3.12"
disable_error_code = ["union-attr", "misc"]
warn_unused_ignores = true
disallow_any_decorated = false
disallow_untyped_defs = false
ignore_missing_imports = true
disallow_untyped_calls = false
namespace_packages = true

[tool.isort]
skip = [".gitignore", ".dockerignore"]
extend_skip = [".md", ".json", ".yaml", ".yml", ".sh"]
known_first_party=["papita_txnsmodel", "papita_txnstracker"]
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER"
]
py_version=312
atomic = true
profile = "black"
line_length = 120
skip_gitignore = true

[tool.flake8]
ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "*.ipynb",
    "papita-transactions-model/tests/*",
    "papita-transactions-tracker/tests/*",
]
max-line-length = 120
max-complexity = 18

[tool.interrogate]
paths = [
    "papita-transactions-model/src",
    "papita-transactions-tracker/src",
    "papita-transactions-model/tests",
    "papita-transactions-tracker/tests",
]
exclude = [
    "papita-transactions-model/alembic",
    "venv",
    ".venv",
    "build",
    "dist",
]
ignore-regex = ["^get$", "^mock_.*", "^test_.*[Base|Invalid|Test|Valid]+Class.*"]
fail-under = 90
verbose = 3
color = true
ignore-init-method = true
ignore-init-module = true
ignore-module = true
ignore-private = true
ignore-magic = true
ignore-property-decorators = false
ignore-nested-functions = true
generate-badge = "./docs"
badge-format = "svg"
badge-style = "plastic"
